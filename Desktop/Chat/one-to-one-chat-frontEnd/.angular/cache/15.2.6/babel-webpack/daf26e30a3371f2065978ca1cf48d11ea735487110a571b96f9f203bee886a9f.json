{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/chat/chat.service\";\nimport * as i2 from \"@angular/common\";\nexport class AppComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.title = 'one-to-one-chat-frontEnd';\n    this.messageArray = [];\n    this.userList = [{\n      id: 1,\n      name: 'John Doe',\n      phone: '9856585858',\n      roomId: {\n        2: 'room-1',\n        3: 'room-2',\n        4: 'room-3'\n      }\n    }, {\n      id: 2,\n      name: 'Swagger Sharma',\n      phone: '9856585444',\n      roomId: {\n        1: 'room-1',\n        3: 'room-4',\n        4: 'room-5'\n      }\n    }, {\n      id: 3,\n      name: 'Test User 1',\n      phone: '6565555585',\n      roomId: {\n        1: 'room-2',\n        2: 'room-4',\n        4: 'room-6'\n      }\n    }, {\n      id: 4,\n      name: 'Test User 2',\n      phone: '9956588544',\n      roomId: {\n        1: 'room-3',\n        2: 'room-5',\n        4: 'room-6'\n      }\n    }];\n    this.chatService.getMessage().subscribe(data => {\n      this.messageArray.push(data);\n    });\n  }\n  ngOnInit() {\n    this.currentUser = this.userList[2];\n  }\n  selectUserHandler(phone) {\n    this.selectedUser = this.userList.find(user => user.phone === phone);\n    this.roomId = this.selectedUser.roomId[this.selectedUser.id];\n    this.messageArray = [];\n    this.join(this.currentUser.name, this.roomId);\n  }\n  join(username, roomId) {\n    this.chatService.joinRoom({\n      user: username,\n      roomId: roomId\n    });\n  }\n  sendMessage() {\n    this.chatService.sendMessage({\n      data: this.currentUser.name,\n      room: this.roomId,\n      message: this.messageText\n    });\n    this.messageText = '';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"user-list-card\"], [1, \"user-card\", 3, \"ngClass\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"div\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", (ctx.user == null ? null : ctx.user.phone) === (ctx.selectedUser == null ? null : ctx.selectedUser.phone) && \"active\");\n    }\n  },\n  dependencies: [i2.NgClass],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAsDvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IArD/B,UAAK,GAAG,0BAA0B;IAI3B,iBAAY,GAAwC,EAAE;IAMtD,aAAQ,GAAG,CAChB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE;QACN,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE;;KAEN,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE;QACN,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE;;KAEN,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE;QACN,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE;;KAEN,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE;QACN,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE;;KAEN,CACF;IAGC,IAAI,CAACJ,WAAW,CACbK,UAAU,EAAE,CACZC,SAAS,CAAEC,IAAuC,IAAI;MACrD,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;EAEAG,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EACrC;EAEAC,iBAAiB,CAACV,KAAa;IAC7B,IAAI,CAACW,YAAY,GAAG,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACb,KAAK,KAAKA,KAAK,CAAC;IACtE,IAAI,CAACC,MAAM,GAAG,IAAI,CAACU,YAAY,CAACV,MAAM,CAAC,IAAI,CAACU,YAAY,CAACb,EAAE,CAAC;IAC5D,IAAI,CAACO,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACS,IAAI,CAAC,IAAI,CAACN,WAAW,CAACT,IAAI,EAAE,IAAI,CAACE,MAAM,CAAC;EAC/C;EAEAa,IAAI,CAACC,QAAgB,EAAEd,MAAc;IACnC,IAAI,CAACJ,WAAW,CAACmB,QAAQ,CAAC;MAAEH,IAAI,EAAEE,QAAQ;MAAEd,MAAM,EAAEA;IAAM,CAAE,CAAC;EAC/D;EAEAgB,WAAW;IACT,IAAI,CAACpB,WAAW,CAACoB,WAAW,CAAC;MAC3Bb,IAAI,EAAE,IAAI,CAACI,WAAW,CAACT,IAAI;MAC3BmB,IAAI,EAAE,IAAI,CAACjB,MAAM;MACjBkB,OAAO,EAAE,IAAI,CAACC;KACf,CAAC;IAEF,IAAI,CAACA,WAAW,GAAG,EAAE;EACvB;;AAtFWzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,8BAA6B;MAKbA,yBAEM;MAEVA,iBAAM;;;MAJqBA,eAAyD;MAAzDA,+IAAyD","names":["AppComponent","constructor","chatService","id","name","phone","roomId","getMessage","subscribe","data","messageArray","push","ngOnInit","currentUser","userList","selectUserHandler","selectedUser","find","user","join","username","joinRoom","sendMessage","room","message","messageText","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Ved\\Socket\\one-to-one-chat-frontEnd\\src\\app\\app.component.ts","D:\\Ved\\Socket\\one-to-one-chat-frontEnd\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChatService } from './services/chat/chat.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'one-to-one-chat-frontEnd';\n\n  public roomId: string;\n  public messageText: string;\n  public messageArray: { user: string; message: string }[] = [];\n\n  public phone: string;\n  public currentUser;\n  public selectedUser;\n\n  public userList = [\n    {\n      id: 1,\n      name: 'John Doe',\n      phone: '9856585858',\n      roomId: {\n        2: 'room-1',\n        3: 'room-2',\n        4: 'room-3',\n      },\n    },\n    {\n      id: 2,\n      name: 'Swagger Sharma',\n      phone: '9856585444',\n      roomId: {\n        1: 'room-1',\n        3: 'room-4',\n        4: 'room-5',\n      },\n    },\n    {\n      id: 3,\n      name: 'Test User 1',\n      phone: '6565555585',\n      roomId: {\n        1: 'room-2',\n        2: 'room-4',\n        4: 'room-6',\n      },\n    },\n    {\n      id: 4,\n      name: 'Test User 2',\n      phone: '9956588544',\n      roomId: {\n        1: 'room-3',\n        2: 'room-5',\n        4: 'room-6',\n      },\n    },\n  ];\n\n  constructor(private chatService: ChatService) {\n    this.chatService\n      .getMessage()\n      .subscribe((data: { user: string; message: string }) => {\n        this.messageArray.push(data);\n      });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.userList[2];\n  }\n\n  selectUserHandler(phone: string): void {\n    this.selectedUser = this.userList.find((user) => user.phone === phone);\n    this.roomId = this.selectedUser.roomId[this.selectedUser.id];\n    this.messageArray = [];\n\n    this.join(this.currentUser.name, this.roomId);\n  }\n\n  join(username: string, roomId: string): void {\n    this.chatService.joinRoom({ user: username, roomId: roomId });\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage({\n      data: this.currentUser.name,\n      room: this.roomId,\n      message: this.messageText,\n    });\n\n    this.messageText = '';\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"user-list-card\">\n\n                <div class=\"user-card\" [ngClass]=\"user?.phone===selectedUser?.phone && 'active'\">\n\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}