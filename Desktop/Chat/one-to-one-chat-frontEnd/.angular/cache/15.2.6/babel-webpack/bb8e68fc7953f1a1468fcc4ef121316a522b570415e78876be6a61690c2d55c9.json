{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ChatService {\n  constructor() {\n    this.url = 'http://localhost:3000';\n    this.socket = io(this.url);\n  }\n  joinRoom(data) {\n    this.socket.emit('join', data);\n  }\n  sendMessage(data) {\n    this.socket.emit('message', data);\n  }\n  getMessage() {\n    return new Observable(observer => {\n      this.socket.on('new message', data => {\n        console.log(\"data\");\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)();\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAiBA,EAAE,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,MAAM;;AAKjC,OAAM,MAAOC,WAAW;EAItBC;IAFQ,QAAG,GAAW,uBAAuB;IAG3C,IAAI,CAACC,MAAM,GAAGJ,EAAE,CAAC,IAAI,CAACK,GAAG,CAAC;EAC5B;EAEAC,QAAQ,CAACC,IAAI;IACX,IAAI,CAACH,MAAM,CAACI,IAAI,CAAC,MAAM,EAAED,IAAI,CAAC;EAChC;EAEAE,WAAW,CAACF,IAAI;IACd,IAAI,CAACH,MAAM,CAACI,IAAI,CAAC,SAAS,EAAED,IAAI,CAAC;EACnC;EAEAG,UAAU;IACR,OAAO,IAAIT,UAAU,CAAqCU,QAAQ,IAAI;MACpE,IAAI,CAACP,MAAM,CAACQ,EAAE,CAAC,aAAa,EAAGL,IAAI,IAAI;QACrCM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBH,QAAQ,CAACI,IAAI,CAACR,IAAI,CAAC;MACrB,CAAC,CAAC;MAEF,OAAO,MAAK;QACV,IAAI,CAACH,MAAM,CAACY,UAAU,EAAE;MAC1B,CAAC;IACH,CAAC,CAAC;EACJ;;AA3BWd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["io","Observable","ChatService","constructor","socket","url","joinRoom","data","emit","sendMessage","getMessage","observer","on","console","log","next","disconnect","factory","providedIn"],"sourceRoot":"","sources":["D:\\Ved\\Socket\\one-to-one-chat-frontEnd\\src\\app\\services\\chat\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket, io } from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  private socket: Socket;\n  private url: string = 'http://localhost:3000';\n\n  constructor() {\n    this.socket = io(this.url);\n  }\n\n  joinRoom(data) {\n    this.socket.emit('join', data);\n  }\n\n  sendMessage(data) {\n    this.socket.emit('message', data);\n  }\n\n  getMessage(): Observable<any> {\n    return new Observable<{ user: string; message: string }>((observer) => {\n      this.socket.on('new message', (data) => {\n        console.log(\"data\")\n        observer.next(data);\n      });\n\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}